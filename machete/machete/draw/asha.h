//
//  asha.h
//  machete
//
//  Created by Hilario Perez Corona on 3/18/12.
//  Copyright (c) 2012 Mat√≥n Supergames. All rights reserved.
//

#pragma once

#include "../data/tree.h"
#include "../data/str.h"
#include "../input/touch.h"
#include "element.h"

namespace machete {
  namespace draw {
    
    //! A screen definition, using width and height
    class ScreenDefinition {
    public:
      
      //! Constructor.
      /*!
       \param width The width of the screen resolution.
       \param height The height of the screen resolution.
       */
      ScreenDefinition(int width, int height);
      
      //! Destructor.
      virtual ~ScreenDefinition();
      
      //! Get the screen width.
      int GetWidth() const;
      
      //! Get the screen height.
      int GetHeight() const;
      
      //! Get the screen area.
      int GetArea() const;
      
      //! Get the scaled area.
      float GetScaledArea(int width, int height) const;
      
      //! Get the scale for a size.
      float GetScaleForSize(int width, int height) const;
      
      //! Get a custom property.
      /*!
       \param prop Property name.
       \return The value of the property name.
       */
      const machete::data::Str GetProp(machete::data::Str prop);
      
      //! Set a custom property.
      void SetProp(machete::data::Str & name, machete::data::Str & val);
      
    protected:
      
      //! Screen width.
      int width;
      
      //! Screen height.
      int height;
      
      //! Screen area covered.
      int area;
      
      //! Custom values for this screen.
      machete::data::Hash<machete::data::Str,machete::data::Str> values;
      
    };
    
    //! Screen homothetic adapter, generated by the Asha class.
    class ScreenAdapter {
    public:
      
      //! Create a new screen adapter.
      /*!
       \param size Original screen size.
       \param screen The best-match screen size.
       \param scale The screen scale.
       \param rotation The screen rotation.
       \param offset The screen offset (after rotation).
       */
      ScreenAdapter(Vec2 size, ScreenDefinition* screen, float scale, bool rotation, Vec2 & offset);
      
      //! Destructor.
      virtual ~ScreenAdapter();
      
      //! Get an Adapted Root.
      /*!
       \param display The final display used to display the game to the end user.
       \param element The element to adapt.
       */
      void AdaptRoot(Root* display, Element* element);
      
      //! Adapt a vector.
      void AdaptVector(Vec2 & touchPos);
      
      //! Detect if it's a perfect match.
      bool IsPerfectMatch() const;
      
      //! Get the screen definition.
      ScreenDefinition* GetScreenDefinition();
      
      //! Get a property from the screen.
      const machete::data::Str GetProp(machete::data::Str prop);
      
    protected:
      
      //! The screen definition.
      ScreenDefinition* screen;
      
      //! Scale.
      float scale;
      
      //! Rotation.
      bool rotation;
      
      //! Offset.
      Vec2 offset;
      
      //! Detects if this adapter is a perfect match.
      bool perfectMatch;
      
      //! Original screen size;
      Vec2 size;
      
    };
    
    //! Automatic Screen Homothetic Adapter.
    /*!
     \brief Nice nace i've got here! This baby detects wich resolution is best for the current screen resolution, and it scales up homothetically the game, and interpolates the touch coordinates. It even rotates your viewport if needed.
     */
    class Asha {
    public:
      
      //! Create a new Asha object.
      /*!
       \param filename The screens definition file to load.
       */
      Asha(const char *filename);
      
      //! Destructor.
      virtual ~Asha();
      
      //! Detect the best screen definition to use given a screen resolution.
      /*!
       \param width Screen width.
       \param height Screen height.
       \param allowRotate Allow screen rotation to detect best match.
       */
      ScreenAdapter* Detect(int width, int height, bool allowRotate);
      
      //! Seek for a best match based on area.
      /*!
       \param width The screen width.
       \param height The screen height.
       \param useBigger Use a bigger resolution.
       */
      ScreenDefinition* SeekBestMatch(int width, int height, bool useBigger);
      
      //! Make an adapter.
      ScreenAdapter* MakeAdapter(ScreenDefinition* screen, bool rotate, int width, int height);
      
    protected:
      
      //! Screens.
      machete::data::Iterator<ScreenDefinition*> screens;
      
    };
    
    //! Asha Manager to convert touch positions.
    class AshaManager {
    public:
      
      //! Create a new Asha Manager.
      AshaManager();
      
      //! Destructor.
      virtual ~AshaManager();
      
      //! Change the current screen adapter.
      /*!
       \param adapter The new screen adapter to use.
       */
      void SetScreenAdapter(ScreenAdapter* adapter);
      
      //! Adapt a position.
      /*!
       \param pos The position to adapt.
       */
      void AdaptPosition(Vec2 & pos);
      
    protected:
      
      //! The current screen adapter.
      ScreenAdapter *adapter;
      
    };
    
    //! The global Asha Manager.
    extern AshaManager* TheAshaManager;
    
  }
}

